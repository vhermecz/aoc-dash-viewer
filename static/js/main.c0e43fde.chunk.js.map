{"version":3,"sources":["Autocomplete.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","leanAutocomplete","paddingRight","Autocomplete","value","onChange","options","labelGetter","valueGetter","fieldArgs","classes","undefined","x","root","getOptionLabel","closeIcon","popupIcon","filter","option","_","renderInput","params","TextField","fixedEncodeURIComponent","str","encodeURIComponent","replace","c","charCodeAt","toString","EMPTY_DATA","vText","height","whiteSpace","fontWeight","fontSize","fontFamily","transform","width","padding","vData","minWidth","maxWidth","overflow","calcDelta","year","ts","i","Date","getTime","formatDelta","delta","signStr","sec","Math","abs","min","floor","hour","day","hasDay","hasHour","hasMin","String","padStart","formatDDHHMMSS","getApiDataReal","sessionId","dashboardId","a","axios","post","headers","JSON","stringify","getApiData","key","data","parse","localStorage","getItem","error","timestamp","now","console","log","res","setItem","compareFunction","b","Score","Object","freeze","API_LOCAL","API_GLOBAL","LOCAL_API","LOCAL_API_FIRST","LOCAL_DELTA","keys","forEach","getStar","userObj","star","coalesce","completion_day_level","get_star_ts","getDelta","s1","s2","OrderMessage","orderBy","scoreBy","Box","scoreMessage","orderMessage","mixinExtraData","values","member","field","lodash","range","members","targetField","order","sort","idx","length","isNumber","minValue","maxValue","num","App","React","useState","setData","dataTime","setDataTime","setSessionId","dashId","setDashId","setOrderBy","setScoreBy","users","setUsers","setYear","useEffect","initParams","URL","window","location","href","searchParams","get","indexOf","query","qs","dash","score","history","replaceState","map","join","resp","read","comparator","name","id","handleOrderBy","numDays","max","days","Array","scoreByDelta","result","push","missingBrowserFeatures","p","Grid","container","item","xs","fullWidth","label","e","target","match","isValidSessionId","Table","style","TableBody","TableRow","TableCell","uid","class","onClick","dayData","star1ts","star2ts","className","pl","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c0e43fde.chunk.js","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ReactAutocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  leanAutocomplete: {\n    '&.MuiAutocomplete-hasPopupIcon.MuiAutocomplete-hasClearIcon .MuiAutocomplete-inputRoot': {\n      paddingRight: 4,\n    },\n  },\n}));\n\n\nfunction fixAutocompleteBug(x) {\n  // Used for Autocomplete\n  // Original code uses off for the autoComplete value, that is not cool\n  x[\"inputProps\"][\"autoComplete\"] = \"new-password\";\n  return x\n}\n\nexport function Autocomplete({value, onChange, options, labelGetter, valueGetter, ...fieldArgs}) {\n  const classes = useStyles();\n  if (valueGetter === undefined) {\n    valueGetter = x=>x;\n  }\n  return <ReactAutocomplete\n      options={options}\n      classes={{\n        root: classes.leanAutocomplete\n      }}\n      getOptionLabel={(...args) => labelGetter(...args) || \"\"}\n      closeIcon=\"\"\n      popupIcon=\"\"\n      value={[...options.filter((option)=>valueGetter(option)===value), null][0]}\n      onChange={(_, value) => onChange(valueGetter(value))}\n      renderInput={(params) => (\n          <TextField\n              {...fixAutocompleteBug(params)}\n              {...fieldArgs}\n          />)}\n  />;\n}\n\nexport function fieldGetter(fieldName) {\n  return (object) => object?.[fieldName];\n}\n\nexport default Autocomplete;\n","import lodash from 'lodash';\n\n/**\n * A smarter encodeURIComponent impl\n * see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\n */\nfunction fixedEncodeURIComponent (str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {\n        return '%' + c.charCodeAt(0).toString(16);\n    });\n}\n\n/**\n * Query-string encode\n * query: The query-param dictionary\n * Returns the encoded querystring\n */\nexport function qs_encode(query) {\n    return lodash.map(query, (value, key) =>\n        fixedEncodeURIComponent(key) + \"=\" + fixedEncodeURIComponent(value)\n    ).join(\"&\")\n}\n\nexport function missingBrowserFeatures() {\n    let result = [];\n    if (localStorage === undefined) {\n        result.push(\"localStorage not supported\");\n    }\n    return result;\n}\n\nexport function isValidSessionId(sessionId) {\n    return (sessionId||\"\").match(/^[a-f0-9]{96}$/);\n}\n","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport {Box, Grid, Table, TextField, TableRow, TableCell, TableBody} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport lodash from \"lodash\";\nimport Autocomplete from \"./Autocomplete\";\nimport {isValidSessionId, missingBrowserFeatures, qs_encode} from \"./utils\";\n\nconst CACHE_TIMEOUT_MS = 15*60*1000;\nconst EMPTY_DATA = {\"members\":{}};\n\nconst useStyles = makeStyles(theme => ({\n  vText: {\n    height: 140,\n    whiteSpace: 'nowrap',\n    fontWeight: 400,\n    fontSize: '16px',\n    fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n    '& div': {\n      transform: 'translate(25px, 51px) rotate(315deg)',\n      width: 30,\n      '& span': {\n        padding: \"5px 10px 5px 0px\",\n      }\n    }\n  },\n  vData: { // this replaces the default class, so have to repeat a lot of junk. lame\n    padding: '8px',\n    width: '52px',\n    minWidth: '52px',\n    maxWidth: '52px',\n    overflow: 'hidden',\n  },\n}));\n\nfunction formatDDHHMMSS(delta) {\n  const signStr = delta<0?\"-\":\"\";\n  delta = Math.abs(delta);\n  const sec = delta % 60;\n  const min = Math.floor(delta / 60) % 60;\n  const hour = Math.floor(delta / 3600) % 24;\n  const day = Math.floor(delta / 86400);\n  const hasDay = day !== 0;\n  const hasHour = hasDay || hour !== 0;\n  const hasMin = hasHour || min !== 0;\n  return signStr +\n      (!hasDay ? '' : String(day) + 'd') +\n      (!hasHour ? '' : String(hour).padStart(hasDay ? 2 : 1, '0') + 'h') +\n      (hasDay || !hasMin ? '' : String(min).padStart(hasHour ? 2 : 1, '0') + 'm') +\n      (hasHour ? '' : String(sec).padStart(hasMin ? 2 : 1, '0') + 's');\n}\n\nfunction calcDelta(year, ts, i) {\n  if (!ts) {\n    return;\n  }\n  const first_day_ts = (new Date(year, 11, 1, 6, 0, 0)).getTime()/1000;\n  return (ts|0) - (first_day_ts+86400*(i-1));\n}\n\nfunction formatDelta(value) {\n  if (!value) {\n    return;\n  }\n  return formatDDHHMMSS(value);\n}\n\nasync function getApiDataReal(year, sessionId, dashboardId) {\n  // return await fetch(`https://vhermecz-aoc-proxy.herokuapp.com/`, {\n  //   \"headers\": {\n  //     \"x-stuff\": JSON.stringify({'year':year, 'dash': dashboardId, 'session':sessionId}),\n  //   },\n  //   \"body\": null,\n  //   \"method\": \"POST\",\n  // });\n  return await axios.post('https://vhermecz-aoc-proxy.herokuapp.com/', null, {\n    headers: {\n      \"x-stuff\": JSON.stringify({'year':year, 'dash': dashboardId, 'session':sessionId}),\n    },\n  });\n}\n\nasync function getApiData(year, sessionId, dashboardId) {\n  const key = `restapi-${dashboardId}-${year}`;\n  let data = null;\n  try {\n    data = JSON.parse(localStorage.getItem(`restapi-${dashboardId}-${year}`));\n  } catch (error) {\n    // pass\n  }\n  if (data !== undefined && data !== null && data.timestamp !== undefined && Date.now() < (data.timestamp + CACHE_TIMEOUT_MS)) {\n    console.log(\"Serving from cache\");\n    return data;\n  }\n  try {\n    const res = await getApiDataReal(year, sessionId, dashboardId);\n    console.log(res);\n    data = {\n      data: res.data || EMPTY_DATA,\n      timestamp: Date.now(),\n    }\n    console.log(data);\n    localStorage.setItem(key, JSON.stringify(data));\n  } catch (error) {\n    console.log(\"ERROR\");\n    // FIXME: Display error\n    data = {\n      error: \"Connection problem\",\n      data: EMPTY_DATA,\n      timestamp: Date.now(),\n    }\n  }\n  return data;\n}\n\nfunction compareFunction(a,b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nexport const Score = Object.freeze({\n  API_LOCAL: {\n    \"field\": \"local_score\",\n    \"label\": \"API Local Score\",\n    \"scoreMessage\": \"total local score as returned by the API\",\n    \"orderMessage\": \"completion time of 2nd star\",\n  },\n  API_GLOBAL: {\n    \"field\": \"global_score\",\n    \"label\": \"API Global Score\",\n    \"scoreMessage\": \"total global score as returned by the API\",\n    \"orderMessage\": \"completion time of 2nd star\",\n  },\n  LOCAL_API: {\n    \"field\": \"local_local_score\",\n    \"label\": \"Local Score\",\n    \"scoreMessage\": \"total local score as computed from timestamps\",\n    \"orderMessage\": \"completion time of 2nd star\",\n  },\n  LOCAL_API_FIRST: {\n    \"field\": \"local_local_score_first\",\n    \"label\": \"Local Score (1st star only)\",\n    \"scoreMessage\": \"total local score as computed from timestamps (only first star counts)\",\n    \"orderMessage\": \"completion time of 1st star\",\n  },\n  LOCAL_DELTA: {\n    \"field\": \"local_delta_score\",\n    \"label\": \"StarDelta Score\",\n    \"scoreMessage\": \"delta-time between first and second star (for late comers/risers)\",\n    \"orderMessage\": \"delta-times between stars\",\n  },\n});\n\nObject.keys(Score).forEach((key) => {\n  Score[key].key = key;\n});\n\nconst MISSING_TIMESTAMP = 1e20;\n\nfunction getStar(userObj, day, star, coalesce) {\n  const value = ((userObj.completion_day_level[day]||{})[star]||{}).get_star_ts;\n  if (value === undefined) {\n    return coalesce;\n  }\n  return value;\n}\n\nfunction getDelta(userObj, day, coalesce) {\n  const s1=getStar(userObj, day, 1);\n  const s2=getStar(userObj, day, 2);\n  if (s1 === undefined || s2 === undefined) {\n    return coalesce;\n  }\n  return s2-s1;\n}\n\nfunction OrderMessage({orderBy, scoreBy, timestamp}) {\n  return (\n      <Box>\n        <b>Scoring by </b>\n        {scoreBy.scoreMessage}.\n        <b> Ordering by </b>\n        {\n          (orderBy === null) ? (\n              \"username\"\n          ) : (orderBy === 0) ? (\n              \"score\"\n          ) : (\n              scoreBy.orderMessage + ` for day #${orderBy}`\n          )\n        }\n        &nbsp;(Queried at {new Date(timestamp).toString()})\n      </Box>\n  );\n}\n\n/**\n * Add in name for anons and some custom scoring\n */\nfunction mixinExtraData(data) {\n  Object.values(data[\"members\"]).forEach( member => {\n    member[\"name\"] = member[\"name\"] || `anon #${member[\"id\"]}`;\n    member[Score.LOCAL_API.field] = 0;\n    member[Score.LOCAL_DELTA.field] = 0;\n  });\n  lodash.range(1, 26).forEach(day => {\n    const members = Object.values(data[\"members\"]);\n    const SCORING_RULES = [\n      [Score.LOCAL_API_FIRST, (userObj) => getStar(userObj, day, 1, MISSING_TIMESTAMP)],\n      [Score.LOCAL_API, (userObj) => getStar(userObj, day, 2, MISSING_TIMESTAMP)],\n      [Score.LOCAL_DELTA, (userObj) => getDelta(userObj, day, MISSING_TIMESTAMP)],\n    ];\n    SCORING_RULES.forEach(([targetField, order]) => {\n      members.sort((a,b) => compareFunction(order(a), order(b)));\n      members.forEach((member, idx) => {\n        if (order(member) !== MISSING_TIMESTAMP) {\n          member[targetField.field] += members.length - idx;\n        }\n      })\n    });\n  });\n  return data;\n}\n\n/** Validate if value is a proper number **/\nfunction isNumber(value, {minValue, maxValue}={}) {\n  if (((value|0)+\"\")!==value) {\n    return false;\n  }\n  const num = value|0;\n  if (minValue !== undefined && num < minValue) {\n    return false;\n  }\n  if (maxValue !== undefined && num > maxValue) {\n    return false;\n  }\n  return true;\n}\n\nfunction App() {\n  const classes = useStyles();\n  const [data, setData] = React.useState(EMPTY_DATA);\n  const [dataTime, setDataTime] = React.useState(null);\n  const [sessionId, setSessionId] = React.useState(\"\");\n  const [dashId, setDashId] = React.useState(\"\");\n  const [orderBy, setOrderBy] = React.useState(null);\n  const [scoreBy, setScoreBy] = React.useState(Score.API_LOCAL);\n  const [users, setUsers] = React.useState([]);\n  const [year, setYear] = React.useState(2020);\n  React.useEffect( () => {\n    // updateFromUrl on first load\n    const initParams = (new URL(window.location.href)).searchParams;\n    if (isNumber(initParams.get('year'), {minValue: 2015, maxValue: 2021})) {\n      setYear(initParams.get('year')|0);\n    }\n    if (initParams.get('dash')) {\n      setDashId(initParams.get('dash'));\n    }\n    if (isNumber(initParams.get('order'))) {\n      setOrderBy(initParams.get('order'));\n    }\n    if (Object.keys(Score).indexOf(initParams.get('score'))>-1) {\n      setScoreBy(Score[initParams.get('score')]);\n    }\n    if (localStorage !== undefined) {\n      setSessionId(localStorage.getItem(\"sessionId\") || \"\");\n    }\n  }, []);\n  React.useEffect(() => {\n    // updateUrl on change\n    let qs = {\n      year: year,\n      order: orderBy===undefined?-1:orderBy,\n      dash: dashId,\n      score: scoreBy.key,\n    };\n    window.history.replaceState({}, null, \"?\" + qs_encode(qs));\n  }, [year, dashId, orderBy, scoreBy]);\n  React.useEffect(() => {\n    localStorage.setItem(\"sessionId\", sessionId);\n  }, [sessionId]);\n  React.useEffect(() => {\n    if (!sessionId || !dashId || !year) return;\n    const read = async() => {\n      const resp = await getApiData(year, sessionId, dashId);\n      setDataTime(resp.timestamp);\n      setData(mixinExtraData(resp.data));\n    }\n    read();\n  }, [sessionId, year, dashId]);\n  React.useEffect(() => {\n    if (!data) {\n      return;\n    }\n    let comparator = (a,b) => compareFunction(a.name, b.name);\n    if (orderBy !== null) {\n      if (orderBy > 0) {\n        if (scoreBy === Score.LOCAL_DELTA) {\n          comparator = (a, b) => compareFunction(getDelta(a, orderBy, MISSING_TIMESTAMP), getDelta(b, orderBy, MISSING_TIMESTAMP));\n        } else if (scoreBy === Score.LOCAL_API_FIRST) {\n          comparator = (a, b) => compareFunction(getStar(a, orderBy, 1, MISSING_TIMESTAMP), getStar(b, orderBy, 1, MISSING_TIMESTAMP));\n        } else if ([Score.LOCAL_API, Score.API_LOCAL, Score.API_GLOBAL].indexOf(scoreBy) > -1) {\n          comparator = (a, b) => compareFunction(getStar(a, orderBy, 2, MISSING_TIMESTAMP), getStar(b, orderBy, 2, MISSING_TIMESTAMP));\n        } else {\n          throw \"Fuck yah!\";\n        }\n      } else {\n        comparator = (a, b) => compareFunction(-a[scoreBy.field], -b[scoreBy.field]);\n      }\n    }\n    setUsers(Object.values(data[\"members\"]).sort(comparator).map(x=>x.id))\n  }, [data, orderBy, scoreBy]);\n  const handleOrderBy = (idx) => {\n    if (idx===orderBy) {\n      setOrderBy(null);\n    } else {\n      setOrderBy(idx);\n    }\n  }\n\n  const numDays = Math.max(0,\n      ...Object.values(data[\"members\"]).map(\n          x => Object.keys(x[\"completion_day_level\"]).length\n      )\n  );\n  const days = [...Array(numDays)].map((_, i) => i+1);\n  const scoreByDelta = scoreBy === Score.LOCAL_DELTA;\n\n  return (missingBrowserFeatures().length > 0) ? (\n      \"Sorry your browser is lame\"\n  ) : (\n      <Box p={2}>\n        <Grid container>\n          <Grid item xs={4}>\n            <TextField\n                fullWidth\n                label=\"Session ID\"\n                value={sessionId}\n                onChange={(e)=>setSessionId(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={1}/>\n          <Grid item xs={1}>\n            <Autocomplete\n                label=\"Year\"\n                options={[2015, 2016, 2017, 2018, 2019, 2020, 2021]}\n                labelGetter={(x)=>x+\"\"}\n                valueGetter={(x)=>x}\n                value={year}\n                onChange={setYear}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <Autocomplete\n                label=\"Score\"\n                options={Object.values(Score)}\n                labelGetter={(x)=>x.label}\n                valueGetter={(x)=>x}\n                value={scoreBy}\n                onChange={setScoreBy}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n                fullWidth\n                label=\"Dashboard ID\"\n                value={dashId}\n                onChange={(e)=>setDashId(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <OrderMessage orderBy={orderBy} scoreBy={scoreBy} timestamp={dataTime}/>\n          </Grid>\n        </Grid>\n        {\n          (!isValidSessionId(sessionId)) ? (\n              <Box pl={4}>\n                <pre>\n                  <br/>\n                  <br/>\n                  Your sessionId is missing or invalid.<br/>\n                  The sessionId is the 'session' cookie used by the AoC site to identify you.<br/>\n                  To get it:<br/>\n                  - Open developer tools<br/>\n                  - Switch to the network tab<br/>\n                  - Filter for 'advent'<br/>\n                  - Open the https://adventofcode.com/ page<br/>\n                  - Look for the request in the network tab with name 'adventofcode.com' and click on it<br/>\n                  - Look for 'cookie:' in the 'Request Headers' section<br/>\n                  - You will see something like 'session=851de75753d31b6fbcfa00fe44d87dfea738f8d6ed5318bd5e1c2f6b7a9f116203403013d6466cbc2768048ac73e51b8'<br/>\n                  - Copy the hexadecimal number into the sessionId field<br/>\n                  - Be happy now!<br/>\n                  <br/>\n                  NOTE: We cache your sessionId in the browser's localStorage for convenience, so you only have to provide it once. It auto-expires after a month (according to AoC site)\n                </pre>\n              </Box>\n          ) : (!data) ? (\n              \"No data\"\n          ) : (\n              <Table style={{width: 'auto'}}>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>AOC</TableCell>\n                    {users.map(uid =>\n                        <TableCell class={classes.vText}>\n                          {/* FIXME: using className (as it should be) breaks the layout, but have no clue why*/}\n                          <Box>\n                          <span>\n                            {data[\"members\"][uid][\"name\"]}\n                          </span>\n                          </Box>\n                        </TableCell>\n                    )}\n                  </TableRow>\n                  <TableRow>\n                    <TableCell onClick={() => handleOrderBy(0)}>\n                      {orderBy === 0 ? <b>Pts</b> : 'Pts'}\n                    </TableCell>\n                    {users.map(uid => {\n                          const score = data[\"members\"][uid][scoreBy.field];\n                          return (\n                              <TableCell>\n                                {score}\n                              </TableCell>\n                          )\n                        }\n                    )}\n                  </TableRow>\n                  {days.map(day =>\n                      <TableRow>\n                        <TableCell onClick={() => handleOrderBy(day)}>\n                          {orderBy === day ? <b>{day}</b> : day}\n                        </TableCell>\n                        {users.map(uid => {\n                              const dayData = data[\"members\"][uid][\"completion_day_level\"][day] || {};\n                              const star1ts = (dayData[\"1\"] || {})[\"get_star_ts\"];\n                              const star2ts = (dayData[\"2\"] || {})[\"get_star_ts\"];\n                              return (\n                                  <TableCell className={classes.vData}>\n                                    {formatDelta(calcDelta(year, star1ts, day))}<br/>\n                                    {formatDelta(calcDelta(year, star2ts, day))}<br/>\n                                    {scoreByDelta && star1ts && star2ts && formatDelta(star2ts - star1ts)}\n                                  </TableCell>\n                              )\n                            }\n                        )}\n                      </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n          )\n        }\n      </Box>\n );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}